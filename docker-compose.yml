version: '3'

services:
  nginx:
    image: nginx:stable-alpine
    ports:
      - '443:443'
      - '80:80'
    depends_on:
      - node-app
    volumes:
      - /etc/letsencrypt:/certs:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ../client/dist:/usr/share/nginx/html
  node-app:
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      update_config:
        parallelism: 2
        delay: 15s
    build:
      context: .
      args:
        NODE_ENV: production
    image: dsaquel/node-app
    environment:
      - PORT=3000
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_PORT=${DATABASE_PORT}
      - NODE_ENV=production
    depends_on:
      - postgres
    command: ['sh', '-c', 'npm run build && node dist/main.js']

  postgres:
    image: postgres
    restart: always
    volumes:
      - postgres-db:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
  redis:
    image: redis

volumes:
  postgres-db:
